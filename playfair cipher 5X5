def prepare_text(text):
    text = text.upper().replace('J', 'I').replace(' ', '')
    result = ''
    i = 0
    while i < len(text):
        a = text[i]
        b = text[i + 1] if i + 1 < len(text) else 'X'
        if a == b:
            result += a + 'X'
            i += 1
        else:
            result += a + b
            i += 2
    if len(result) % 2 == 1:
        result += 'X'
    return result

def generate_matrix(key):
    key = key.upper().replace('J', 'I')
    seen = set()
    matrix = ''
    for c in key + 'ABCDEFGHIKLMNOPQRSTUVWXYZ':
        if c not in seen:
            seen.add(c)
            matrix += c
    return [list(matrix[i:i+5]) for i in range(0, 25, 5)]

def find_position(matrix, char):
    for i in range(5):
        for j in range(5):
            if matrix[i][j] == char:
                return i, j
    return None, None

def playfair_encrypt(plain, matrix):
    cipher = ''
    for i in range(0, len(plain), 2):
        a, b = plain[i], plain[i+1]
        row1, col1 = find_position(matrix, a)
        row2, col2 = find_position(matrix, b)

        if row1 == row2:
            cipher += matrix[row1][(col1 + 1) % 5]
            cipher += matrix[row2][(col2 + 1) % 5]
        elif col1 == col2:
            cipher += matrix[(row1 + 1) % 5][col1]
            cipher += matrix[(row2 + 1) % 5][col2]
        else:
            cipher += matrix[row1][col2]
            cipher += matrix[row2][col1]
    return cipher

# Input and encryption
key = input("Enter keyword: ")
plaintext = input("Enter plaintext: ")
prepared = prepare_text(plaintext)
matrix = generate_matrix(key)
ciphertext = playfair_encrypt(prepared, matrix)

print("Encrypted Text:", ciphertext)



Enter keyword: MONARCHY
Enter plaintext: INSTRUMENTS
Encrypted Text: GATLMZCLRQTX

